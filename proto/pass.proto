syntax = "proto3";

option go_package = "github.com/ilya372317/pass-keeper/proto";

message User {
  int64 id = 1;
  string email = 2;
  string created_at = 3;
  string updated_at = 4;
}

message RegisterRequest {
  string email = 1;
  string password = 2;
}

message RegisterResponse {
  User user = 1;
}

message AuthRequest {
  string email = 1;
  string password = 2;
}

message AuthResponse {
  string access_token = 1;
}

message Data {
  int64 id = 3;
  string payload = 1;
  string metadata = 2;
}

message DeleteDataRequest {
  int64 id = 1;
}

message DeleteDataResponse {
  bool success = 1;
}

message IndexRequest {
}

message IndexResponse {
  repeated IndexItem items = 1;
}

message LoginPassMetadata {
  string url = 1;
}

message SaveLoginPassRequest {
  LoginPassMetadata metadata = 1;
  string login = 2;
  string password = 3;
}

message SaveLoginPassResponse {
}

message UpdateLoginPassRequest {
  int64 id = 4;
  optional LoginPassMetadata metadata = 1;
  optional string login = 2;
  optional string password = 3;
}

message UpdateLoginPassResponse {
}

message ShowLoginPassRequest {
  int64 id = 1;
}

message LoginPass {
  int64 id = 1;
  string login = 2;
  string password = 3;
  LoginPassMetadata metadata = 4;
}

message ShowLoginPassResponse {
  LoginPass login_pass = 1;
}

message CreditCardMetadata {
  string bank_name = 1;
}

message SaveCreditCardRequest {
  CreditCardMetadata metadata = 1;
  string card_number = 2;
  string expiration = 3;
  int32 cvv = 4;
}

message SaveCreditCardResponse {
}

message UpdateCreditCardRequest {
  int64 id = 1;
  optional string card_number = 2;
  optional string expiration = 3;
  optional int32 cvv = 4;
  optional CreditCardMetadata metadata = 5;
}

message UpdateCreditCardResponse {
}

message CreditCard {
  int64 id = 1;
  string card_number = 2;
  string expiration = 3;
  int32 cvv = 4;
  CreditCardMetadata metadata = 5;
}

message ShowCreditCardRequest {
  int64 id = 1;
}

message ShowCreditCardResponse {
  CreditCard credit_card = 1;
}

message TextMetadata {
  string info = 1;
}

message SaveTextRequest {
  TextMetadata metadata = 2;
  string data = 1;
}

message SaveTextResponse {}

message UpdateTextRequest {
  int64 id = 1;
  optional TextMetadata metadata = 2;
  optional string data = 3;
}

message UpdateTextResponse{}

message ShowTextRequest {
  int64 id = 1;
}

message Text {
  int64 id = 1;
  TextMetadata metadata = 2;
  string data = 3;
}

message ShowTextResponse {
  Text text = 1;
}

message Binary {
  int64 id = 2;
  BinaryMetadata metadata = 3;
  bytes data = 1;
}

message BinaryMetadata {
  string info = 1;
}

message SaveBinaryRequest {
  BinaryMetadata metadata = 1;
  bytes data = 2;
}

message SaveBinaryResponse {}

message UpdateBinaryRequest {
  int64 id = 1;
  optional BinaryMetadata metadata = 2;
  optional bytes data = 3;
}

message UpdateBinaryResponse {}

message ShowBinaryRequest {
  int64 id = 1;
}

message ShowBinaryResponse {
  Binary binary = 1;
}

message IndexItem {
  int64 id = 1;
  string info = 2;
  int32 type = 3;
}

service PassService {
  // Auth and register.
  rpc Auth(AuthRequest) returns (AuthResponse);
  rpc Register(RegisterRequest) returns (RegisterResponse);

  // Delete for all data types.
  rpc Delete(DeleteDataRequest) returns (DeleteDataResponse);

  // Index all data types for user.
  rpc Index(IndexRequest) returns (IndexResponse);

  // Operations for text data.
  rpc SaveText(SaveTextRequest) returns (SaveTextResponse);
  rpc UpdateText(UpdateTextRequest) returns (UpdateTextResponse);
  rpc ShowText(ShowTextRequest) returns (ShowTextResponse);

  // Operations for binary data.
  rpc SaveBinary(SaveBinaryRequest) returns (SaveBinaryResponse);
  rpc UpdateBinary(UpdateBinaryRequest) returns (UpdateBinaryResponse);
  rpc ShowBinary(ShowBinaryRequest) returns (ShowBinaryResponse);

  // Operations for login password type.
  rpc SaveLoginPass(SaveLoginPassRequest) returns (SaveLoginPassResponse);
  rpc UpdateLoginPass(UpdateLoginPassRequest) returns (UpdateLoginPassResponse);
  rpc ShowLoginPass(ShowLoginPassRequest) returns (ShowLoginPassResponse);

  // Operations for credit card type.
  rpc SaveCreditCard(SaveCreditCardRequest) returns (SaveCreditCardResponse);
  rpc UpdateCreditCard(UpdateCreditCardRequest) returns (UpdateCreditCardResponse);
  rpc ShowCreditCard(ShowCreditCardRequest) returns (ShowCreditCardResponse);
}
