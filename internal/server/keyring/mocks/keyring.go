// Code generated by MockGen. DO NOT EDIT.
// Source: internal/server/keyring/keyring.go

// Package keyringmock is a generated GoMock package.
package keyringmock

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	domain "github.com/ilya372317/pass-keeper/internal/server/domain"
)

// MockkeyStorage is a mock of keyStorage interface.
type MockkeyStorage struct {
	ctrl     *gomock.Controller
	recorder *MockkeyStorageMockRecorder
}

// MockkeyStorageMockRecorder is the mock recorder for MockkeyStorage.
type MockkeyStorageMockRecorder struct {
	mock *MockkeyStorage
}

// NewMockkeyStorage creates a new mock instance.
func NewMockkeyStorage(ctrl *gomock.Controller) *MockkeyStorage {
	mock := &MockkeyStorage{ctrl: ctrl}
	mock.recorder = &MockkeyStorageMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockkeyStorage) EXPECT() *MockkeyStorageMockRecorder {
	return m.recorder
}

// GetKey mocks base method.
func (m *MockkeyStorage) GetKey(arg0 context.Context) (*domain.Keys, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetKey", arg0)
	ret0, _ := ret[0].(*domain.Keys)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetKey indicates an expected call of GetKey.
func (mr *MockkeyStorageMockRecorder) GetKey(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetKey", reflect.TypeOf((*MockkeyStorage)(nil).GetKey), arg0)
}

// SaveKey mocks base method.
func (m *MockkeyStorage) SaveKey(ctx context.Context, keys *domain.Keys) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SaveKey", ctx, keys)
	ret0, _ := ret[0].(error)
	return ret0
}

// SaveKey indicates an expected call of SaveKey.
func (mr *MockkeyStorageMockRecorder) SaveKey(ctx, keys interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SaveKey", reflect.TypeOf((*MockkeyStorage)(nil).SaveKey), ctx, keys)
}
